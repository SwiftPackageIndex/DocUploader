AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Arch:
    Type: String
    Default: x86_64
    AllowedValues:
      - arm64
      - x86_64
  InboxBucket:
    Type: 'AWS::S3::Bucket::Name'

  Env:
    Type: String
    AllowedValues:
      - test
      - prod

Mappings:
  EnvMapping:
    test:
      Arch: arm64
      InboxBucket: spi-scratch-inbox
      # We need to specify two output buckets in prod, so we hack around this by specifying scratch
      # twice here.
      OutBucket1: spi-scratch
      OutBucket2: spi-scratch
    prod:
      InboxBucket: spi-docs-inbox
      OutBucket1: spi-dev-docs
      OutBucket2: spi-prod-docs


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Resources:

  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - !Ref Arch
      CodeUri: ./.lambda/doc-uploader/lambda.zip
      Handler: "haha"
      Runtime: provided.al2
      MemorySize: 256
      EphemeralStorage:
        Size: 2048
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectACL
                - s3:DeleteObject
              Resource: !Sub 'arn:aws:s3:::${InboxBucket}/*'
            - Effect: Allow
              Action:
                - s3:*
              Resource:
                - 'arn:aws:s3:::spi-scratch/*'
                - 'arn:aws:s3:::spi-scratch'

      # add other neeeded stuff here if needed
      Environment:
        Variables:
          LOG_LEVEL: info # change log level here
      Events:
        InboxEvent:
          Type: S3
          Properties:
            Bucket: !Ref InboxBucketResource
            Events: s3:ObjectCreated:*

  InboxBucketResource:
    Type: "AWS::S3::Bucket"
    Properties: 
      BucketName: !Ref InboxBucket  # <- set this from a parameter
                                    # Fails: Parameters: [InboxBucket] must have values
      LifecycleConfiguration:
        Rules:
          - Id: InboxExpirationRule
            Status: Enabled
            ExpirationInDays: 1
  
  # explicitly create log group to ensure logs are only preserved 14 days (otherways always)
  UploadFunctionLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref UploadFunction]]
      RetentionInDays: 14
